{
  "keyboard": "glove80",
  "firmware_api_version": "1",
  "locale": "en-US",
  "uuid": "115809b0-b832-41cc-88dc-f324eaec18f7",
  "parent_uuid": "e3f0985f-39a5-4e5a-a30b-0fa9538662a1",
  "unlisted": false,
  "date": 1761096137,
  "creator": "mirzapasalic",
  "title": "Factory + Mods (simplified engrammer) + gaming (reverse/lower) v3",
  "notes": "- hyper + meh combos configured",
  "tags": [],
  "custom_defined_behaviors": "#ifndef OPERATING_SYSTEM\n#define OPERATING_SYSTEM 'M' // macos\n//#define OPERATING_SYSTEM 'W' // windows\n#endif\n#if OPERATING_SYSTEM == 'M'\n  #define _C      LG\n  #define _A_TAB  LGUI\n  #define _G_TAB  LALT\n  #define _REDO   _C(LS(Z))\n  #define _POWER  K_POWER\n  #define _W      LA\n  #define _HOME   _C(LEFT)\n  #define _END    _C(RIGHT)\n  #define _EMOJI  LG(LC(SPACE))\n#else\n  #define _C      LC\n  #define _A_TAB  LALT\n  #define _G_TAB  LGUI\n  #define _REDO   _C(Y)\n  #define _POWER  C_POWER\n  #define _W      _C\n  #define _HOME   HOME\n  #define _END    END\n  #define _EMOJI  LG(DOT)\n#endif\n#define _SLEEP      C_SLEEP\n#if OPERATING_SYSTEM == 'W'\n  #define _LOCK   LG(L)\n#elif OPERATING_SYSTEM == 'M'\n  #define _LOCK   _C(LC(Q))\n#elif OPERATING_SYSTEM == 'L'\n  #define _LOCK   K_LOCK\n#endif\n#define _UNDO       _C(Z)\n#define _CUT        _C(X)\n#define _COPY       _C(C)\n#define _PASTE      _C(V)\n#define _FIND       _C(F)\n#define _FIND_NEXT  _C(G)\n#define _FIND_PREV  _C(LS(G))\n\n//\n// USE_NUMPAD_KEYCODES puts `KP_*` keycodes into the Number layer.\n//\n#ifdef USE_NUMPAD_KEYCODES\n#define _KP_N0 KP_N0\n#define _KP_N1 KP_N1\n#define _KP_N2 KP_N2\n#define _KP_N3 KP_N3\n#define _KP_N4 KP_N4\n#define _KP_N5 KP_N5\n#define _KP_N6 KP_N6\n#define _KP_N7 KP_N7\n#define _KP_N8 KP_N8\n#define _KP_N9 KP_N9\n#define _KP_PLUS KP_PLUS\n#define _KP_MINUS KP_MINUS\n#define _KP_ASTERISK KP_ASTERISK\n#define _KP_SLASH KP_SLASH\n#define _KP_COMMA KP_COMMA\n#define _KP_DOT KP_DOT\n#define _KP_EQUAL KP_EQUAL\n#define _KP_ENTER KP_ENTER\n#else\n#define _KP_N0 N0\n#define _KP_N1 N1\n#define _KP_N2 N2\n#define _KP_N3 N3\n#define _KP_N4 N4\n#define _KP_N5 N5\n#define _KP_N6 N6\n#define _KP_N7 N7\n#define _KP_N8 N8\n#define _KP_N9 N9\n#define _KP_PLUS PLUS\n#define _KP_MINUS MINUS\n#define _KP_ASTERISK ASTERISK\n#define _KP_SLASH SLASH\n#define _KP_COMMA COMMA\n#define _KP_DOT DOT\n#define _KP_EQUAL EQUAL\n#define _KP_ENTER ENTER\n#endif\n\n//\n// Keymap specific knowledge of the base layer's alpha + ZMK layout\n//\n#if defined(LAYER_Enthium) && LAYER_Enthium == 0\n#define KEY_LH_C6R1 HOME\n#define KEY_LH_C5R1 END\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 PG_UP\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 UP\n#define KEY_LH_C6R3 PG_DN\n#define KEY_LH_C5R3 B\n#define KEY_LH_C4R3 Y\n#define KEY_LH_C3R3 O\n#define KEY_LH_C2R3 U\n#define KEY_LH_C1R3 SEMI\n#define KEY_RH_C1R3 X\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 D\n#define KEY_RH_C4R3 W\n#define KEY_RH_C5R3 V\n#define KEY_RH_C6R3 DOWN\n#define KEY_LH_C6R4 Z\n#define KEY_LH_C5R4 C\n#define KEY_LH_C4R4 I\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 A\n#define KEY_LH_C1R4 COMMA\n#define KEY_RH_C1R4 K\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 N\n#define KEY_RH_C5R4 S\n#define KEY_RH_C6R4 Q\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 SQT\n#define KEY_LH_C4R5 MINUS\n#define KEY_LH_C3R5 EQUAL\n#define KEY_LH_C2R5 DOT\n#define KEY_LH_C1R5 FSLH\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 INSERT\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 DELETE\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 J\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 G\n#define KEY_RH_C4R5 P\n#define KEY_RH_C5R5 F\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 SPACE\n#define KEY_LH_T5 TAB\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 BACKSPACE\n#define KEY_RH_T4 R\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Engrammer) && LAYER_Engrammer == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 B\n#define KEY_LH_C4R3 Y\n#define KEY_LH_C3R3 O\n#define KEY_LH_C2R3 U\n#define KEY_LH_C1R3 SQT\n#define KEY_RH_C1R3 SEMI\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 D\n#define KEY_RH_C4R3 W\n#define KEY_RH_C5R3 V\n#define KEY_RH_C6R3 Z\n#define KEY_LH_C6R4 Z\n#define KEY_LH_C5R4 C\n#define KEY_LH_C4R4 I\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 A\n#define KEY_LH_C1R4 COMMA\n#define KEY_RH_C1R4 DOT\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 S\n#define KEY_RH_C5R4 N\n#define KEY_RH_C6R4 Q\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 G\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 J\n#define KEY_LH_C2R5 K\n#define KEY_LH_C1R5 MINUS\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 FSLH\n#define KEY_RH_C2R5 R\n#define KEY_RH_C3R5 M\n#define KEY_RH_C4R5 F\n#define KEY_RH_C5R5 P\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Engram) && LAYER_Engram == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 LBKT\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 RBKT\n#define KEY_LH_C6R3 HASH\n#define KEY_LH_C5R3 B\n#define KEY_LH_C4R3 Y\n#define KEY_LH_C3R3 O\n#define KEY_LH_C2R3 U\n#define KEY_LH_C1R3 SQT\n#define KEY_RH_C1R3 DQT\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 D\n#define KEY_RH_C4R3 W\n#define KEY_RH_C5R3 V\n#define KEY_RH_C6R3 Z\n#define KEY_LH_C6R4 Z\n#define KEY_LH_C5R4 C\n#define KEY_LH_C4R4 I\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 A\n#define KEY_LH_C1R4 COMMA\n#define KEY_RH_C1R4 DOT\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 S\n#define KEY_RH_C5R4 N\n#define KEY_RH_C6R4 Q\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 G\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 J\n#define KEY_LH_C2R5 K\n#define KEY_LH_C1R5 MINUS\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 QMARK\n#define KEY_RH_C2R5 R\n#define KEY_RH_C3R5 M\n#define KEY_RH_C4R5 F\n#define KEY_RH_C5R5 P\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 AT\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 FSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Dvorak) && LAYER_Dvorak == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 TAB\n#define KEY_LH_C5R3 SQT\n#define KEY_LH_C4R3 COMMA\n#define KEY_LH_C3R3 DOT\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 Y\n#define KEY_RH_C1R3 F\n#define KEY_RH_C2R3 G\n#define KEY_RH_C3R3 C\n#define KEY_RH_C4R3 R\n#define KEY_RH_C5R3 L\n#define KEY_RH_C6R3 SLASH\n#define KEY_LH_C6R4 CAPS\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 O\n#define KEY_LH_C3R4 E\n#define KEY_LH_C2R4 U\n#define KEY_LH_C1R4 I\n#define KEY_RH_C1R4 D\n#define KEY_RH_C2R4 H\n#define KEY_RH_C3R4 T\n#define KEY_RH_C4R4 N\n#define KEY_RH_C5R4 S\n#define KEY_RH_C6R4 MINUS\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 SEMI\n#define KEY_LH_C4R5 Q\n#define KEY_LH_C3R5 J\n#define KEY_LH_C2R5 K\n#define KEY_LH_C1R5 X\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 B\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 W\n#define KEY_RH_C4R5 V\n#define KEY_RH_C5R5 Z\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Colemak) && LAYER_Colemak == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 BSLH\n#define KEY_LH_C6R3 GRAVE\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 F\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 G\n#define KEY_RH_C1R3 J\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 U\n#define KEY_RH_C4R3 Y\n#define KEY_RH_C5R3 SEMI\n#define KEY_RH_C6R3 MINUS\n#define KEY_LH_C6R4 CAPS\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 R\n#define KEY_LH_C3R4 S\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 D\n#define KEY_RH_C1R4 H\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 I\n#define KEY_RH_C5R4 O\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 V\n#define KEY_LH_C1R5 B\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 K\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_QWERTY) && LAYER_QWERTY == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 MINUS\n#define KEY_LH_C6R3 TAB\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 E\n#define KEY_LH_C2R3 R\n#define KEY_LH_C1R3 T\n#define KEY_RH_C1R3 Y\n#define KEY_RH_C2R3 U\n#define KEY_RH_C3R3 I\n#define KEY_RH_C4R3 O\n#define KEY_RH_C5R3 P\n#define KEY_RH_C6R3 BSLH\n#define KEY_LH_C6R4 CAPS\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 S\n#define KEY_LH_C3R4 D\n#define KEY_LH_C2R4 F\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 H\n#define KEY_RH_C2R4 J\n#define KEY_RH_C3R4 K\n#define KEY_RH_C4R4 L\n#define KEY_RH_C5R4 SEMI\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 V\n#define KEY_LH_C1R5 B\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 N\n#define KEY_RH_C2R5 M\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_ColemakDH) && LAYER_ColemakDH == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 MINUS\n#define KEY_LH_C6R3 TAB\n#define KEY_LH_C5R3 Q\n#define KEY_LH_C4R3 W\n#define KEY_LH_C3R3 F\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 B\n#define KEY_RH_C1R3 J\n#define KEY_RH_C2R3 L\n#define KEY_RH_C3R3 U\n#define KEY_RH_C4R3 Y\n#define KEY_RH_C5R3 SEMI\n#define KEY_RH_C6R3 BSLH\n#define KEY_LH_C6R4 CAPS\n#define KEY_LH_C5R4 A\n#define KEY_LH_C4R4 R\n#define KEY_LH_C3R4 S\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 M\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 I\n#define KEY_RH_C5R4 O\n#define KEY_RH_C6R4 SQT\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 Z\n#define KEY_LH_C4R5 X\n#define KEY_LH_C3R5 C\n#define KEY_LH_C2R5 D\n#define KEY_LH_C1R5 V\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 K\n#define KEY_RH_C2R5 H\n#define KEY_RH_C3R5 COMMA\n#define KEY_RH_C4R5 DOT\n#define KEY_RH_C5R5 FSLH\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n#if defined(LAYER_Canary) && LAYER_Canary == 0\n#define KEY_LH_C6R1 UP\n#define KEY_LH_C5R1 DOWN\n#define KEY_LH_C4R1 A\n#define KEY_LH_C3R1 B\n#define KEY_LH_C2R1 C\n#define KEY_RH_C2R1 D\n#define KEY_RH_C3R1 E\n#define KEY_RH_C4R1 F\n#define KEY_RH_C5R1 LEFT\n#define KEY_RH_C6R1 RIGHT\n#define KEY_LH_C6R2 EQUAL\n#define KEY_LH_C5R2 N1\n#define KEY_LH_C4R2 N2\n#define KEY_LH_C3R2 N3\n#define KEY_LH_C2R2 N4\n#define KEY_LH_C1R2 N5\n#define KEY_RH_C1R2 N6\n#define KEY_RH_C2R2 N7\n#define KEY_RH_C3R2 N8\n#define KEY_RH_C4R2 N9\n#define KEY_RH_C5R2 N0\n#define KEY_RH_C6R2 MINUS\n#define KEY_LH_C6R3 TAB\n#define KEY_LH_C5R3 W\n#define KEY_LH_C4R3 L\n#define KEY_LH_C3R3 Y\n#define KEY_LH_C2R3 P\n#define KEY_LH_C1R3 B\n#define KEY_RH_C1R3 Z\n#define KEY_RH_C2R3 F\n#define KEY_RH_C3R3 O\n#define KEY_RH_C4R3 U\n#define KEY_RH_C5R3 SQT\n#define KEY_RH_C6R3 BSLH\n#define KEY_LH_C6R4 CAPS\n#define KEY_LH_C5R4 C\n#define KEY_LH_C4R4 R\n#define KEY_LH_C3R4 S\n#define KEY_LH_C2R4 T\n#define KEY_LH_C1R4 G\n#define KEY_RH_C1R4 M\n#define KEY_RH_C2R4 N\n#define KEY_RH_C3R4 E\n#define KEY_RH_C4R4 I\n#define KEY_RH_C5R4 A\n#define KEY_RH_C6R4 SEMI\n#define KEY_LH_C6R5 LSFT\n#define KEY_LH_C5R5 Q\n#define KEY_LH_C4R5 J\n#define KEY_LH_C3R5 V\n#define KEY_LH_C2R5 D\n#define KEY_LH_C1R5 K\n#define KEY_LH_T1 ESC\n#define KEY_LH_T2 K_APP\n#define KEY_LH_T3 0\n#define KEY_RH_T3 0\n#define KEY_RH_T2 INSERT\n#define KEY_RH_T1 ENTER\n#define KEY_RH_C1R5 X\n#define KEY_RH_C2R5 H\n#define KEY_RH_C3R5 FSLH\n#define KEY_RH_C4R5 COMMA\n#define KEY_RH_C5R5 DOT\n#define KEY_RH_C6R5 RSFT\n#define KEY_LH_C6R6 0\n#define KEY_LH_C5R6 GRAVE\n#define KEY_LH_C4R6 LBKT\n#define KEY_LH_C3R6 RBKT\n#define KEY_LH_C2R6 LSFT\n#define KEY_LH_T4 BACKSPACE\n#define KEY_LH_T5 DELETE\n#define KEY_LH_T6 0\n#define KEY_RH_T6 0\n#define KEY_RH_T5 TAB\n#define KEY_RH_T4 SPACE\n#define KEY_RH_C2R6 RSFT\n#define KEY_RH_C3R6 LPAR\n#define KEY_RH_C4R6 RPAR\n#define KEY_RH_C5R6 BSLH\n#define KEY_RH_C6R6 0\n#endif\n\nmacros {\n  //////////////////////////////////////////////////////////////////////////\n  //\n  // Approximation of Pascal Getreuer's Select Word macro from QMK\n  // - https://getreuer.info/posts/keyboards/select-word/index.html\n  //\n  //////////////////////////////////////////////////////////////////////////\n\n  //\n  // SELECT_WORD_DELAY defines how long the macro waits (milliseconds)\n  // after moving the cursor before it selects a word.  A larger delay\n  // may allow the macro to move to the next word upon each invocation.\n  //\n  #ifndef SELECT_WORD_DELAY\n  #define SELECT_WORD_DELAY 1\n  #endif\n\n  #define select_all kp _C(A)\n\n  ZMK_MACRO(select_none,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp DOWN &kp UP &kp RIGHT &kp LEFT>;\n  )\n\n  //\n  // select a word (jumps to next word upon each successive invocation)\n  //\n  select_word: select_word {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&select_word_right>, <&select_word_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(select_word_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _W(RIGHT) &kp _W(LEFT) &kp _W(LS(RIGHT))>;\n  )\n  ZMK_MACRO(select_word_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _W(LEFT) &kp _W(RIGHT) &kp _W(LS(LEFT))>;\n  )\n\n  //\n  // extend current selection by one word\n  //\n  extend_word: extend_word {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&extend_word_right>, <&extend_word_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(extend_word_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _W(LS(RIGHT))>;\n  )\n  ZMK_MACRO(extend_word_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _W(LS(LEFT))>;\n  )\n\n  //\n  // select current line\n  //\n  select_line: select_line {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&select_line_right>, <&select_line_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(select_line_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _HOME &kp LS(_END)>;\n  )\n  ZMK_MACRO(select_line_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp _END &kp LS(_HOME)>;\n  )\n\n  //\n  // extend current selection by one line\n  //\n  extend_line: extend_line {\n    compatible = \"zmk,behavior-mod-morph\";\n    #binding-cells = <0>;\n    bindings = <&extend_line_right>, <&extend_line_left>;\n    mods = <(MOD_LSFT|MOD_RSFT)>;\n  };\n  ZMK_MACRO(extend_line_right,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp LS(DOWN) &kp LS(_END)>;\n  )\n  ZMK_MACRO(extend_line_left,\n    wait-ms = <SELECT_WORD_DELAY>;\n    tap-ms = <SELECT_WORD_DELAY>;\n    bindings = <&kp LS(UP) &kp LS(_HOME)>;\n  )\n\n};",
  "custom_devicetree": "/* Empty underglow layer definition (for copy-paste)\n        mylayer {\n            bindings = <\n                ______ ______ ______ ______ ______                                                          ______ ______ ______ ______ ______\n                ______ ______ ______ ______ ______ ______                                            ______ ______ ______ ______ ______ ______\n                ______ ______ ______ ______ ______ ______                                            ______ ______ ______ ______ ______ ______\n                ______ ______ ______ ______ ______ ______                                            ______ ______ ______ ______ ______ ______\n                ______ ______ ______ ______ ______ ______ ______ ______ ______  ______ ______ ______ ______ ______ ______ ______ ______ ______\n                ______ ______ ______ ______ ______        ______ ______ ______  ______ ______ ______        ______ ______ ______ ______ ______\n                >;\n            layer-id = <LAYER_Name>;\n        };\n*/\n#include <dt-bindings/zmk/rgb_colors.h>\n/ {\n    underglow-layer {\n        compatible  = \"zmk,underglow-layer\";\n        //\n        // color definitions from QMK\n        // https://github.com/qmk/qmk_firmware/blob/master/quantum/color.h\n        //\n        #define RGB_AZURE     0x99F5FF // #99F5FF\n        #define RGB_BLACK     0x000000 // #000000\n        #define RGB_GRAY      0x777777 //#777777\n        #define RGB_BLUE      0x0000FF //#27274b\n        #define RGB_BASE      0x0000FF //#27274b \n        // #define RGB_LBASE     0x4c4c9a //#4c4c9a\n        #define RGB_LBASE     0x7A00FF // #7A00FF\n        #define RGB_CHARTRSE  0x80FF00 // #80FF00\n        #define RGB_CORAL     0xFF7C4D // #FF7C4D\n        #define RGB_CYAN      0x00FFFF // #00FFFF\n        #define RGB_GOLD      0xFFD900 // #FFD900\n        #define RGB_GOLDNROD  0xD9A521 // #D9A521\n        #define RGB_GREEN     0x00FF00 // #00FF00\n        #define RGB_MAGENTA   0xFF00FF // #FF00FF\n        #define RGB_ORANGE    0xFF8000 // #FF8000\n        #define RGB_PINK      0xFF80BF // #FF80BF\n        #define RGB_PURPLE    0x7A00FF // #7A00FF\n        #define RGB_RED       0xFF0000 // #FF0000\n        #define RGB_SPRINGRN  0x00FF80 // #00FF80\n        #define RGB_TEAL      0x008080 // #008080\n        #define RGB_TURQUOIS  0x476E6A // #476E6A\n        #define RGB_WHITE     0xFFFFFF // #FFFFFF\n        #define RGB_YELLOW    0xFFFF00 // #FFFF00\n\n        //\n        // color definitions from MoErgo\n        // https://github.com/moergo-sc/zmk/blob/aca523dfce9b6447ffd19d833b791d44f1f286de/app/src/rgb_underglow.c#L259-L265\n        //\n        #define RGB_DULL_GRN  0x00ff68 // #00ff68\n        #define RGB_LILAC     0x6b1fce // #6b1fce\n\n        //\n        // underglow for the colors above\n        //\n        #define AZURE     &ug RGB_AZURE\n        #define BLACK     &ug RGB_BLACK\n        #define BLUE      &ug RGB_BLUE\n        #define CHARTRSE  &ug RGB_CHARTRSE\n        #define CORAL     &ug RGB_CORAL\n        #define CYAN      &ug RGB_CYAN\n        #define GOLD      &ug RGB_GOLD\n        #define GOLDNROD  &ug RGB_GOLDNROD\n        #define GRAY      &ug RGB_GRAY\n        #define GREEN     &ug RGB_GREEN\n        #define MAGENTA   &ug RGB_MAGENTA\n        #define ORANGE    &ug RGB_ORANGE\n        #define PINK      &ug RGB_PINK\n        #define PURPLE    &ug RGB_PURPLE\n        #define RED       &ug RGB_RED\n        #define SPRINGRN  &ug RGB_SPRINGRN\n        #define TEAL      &ug RGB_TEAL\n        #define TURQUOIS  &ug RGB_TURQUOIS\n        #define WHITE     &ug RGB_WHITE\n        #define YELLOW    &ug RGB_YELLOW\n        #define ________  &ug RGB_BLACK\n        #define DULL_GRN  &ug RGB_DULL_GRN\n        #define LILAC     &ug RGB_LILAC\n        #define BASE      &ug RGB_BASE\n        #define LBASE     &ug RGB_LBASE\n\n        //\n        // colors for mouse speed scaling in Mouse layers\n        //\n        #define MSE_FAST GOLD // #FFD900\n        #define MSE_WARP CHARTRSE // #80FF00\n        #define MSE_SLOW CORAL // #FF7C4D\n\n        #define ARROW ORANGE // #FF8000\n        #define NAVIGATE PINK // #FF80BF\n\n        //\n        // colors for mouse speed scaling in Mouse layers\n        //\n        #define SET_MORE &ug 0xFFFF00 // #FFFF00\n        #define SET_LESS &ug 0x644d14 // #644d14\n        #define SET_NONE GOLD // #FFD900\n\n        #define SET_TOGL &ug 0x00FF00 // #00FF00\n        #define SET_NEXT &ug 0x00FFAA // #00FFAA\n        #define SET_PREV &ug 0xAAFF00 // #AAFF00\n        \n\n        //\n        // underglow for keyboard locks on the Base layer\n        //\n        #define UGSL_BAS &ug_sl RGB_LILAC RGB_ORANGE // ScrollLock COLOR_OFF COLOR_ON\n        #define UGNL_BAS &ug_nl RGB_LILAC RGB_ORANGE // NumLock    COLOR_OFF COLOR_ON\n        #define UGCL_BAS &ug_cl RGB_LILAC RGB_ORANGE // CapsLock   COLOR_OFF COLOR_ON\n\n        //\n        // underglow for keyboard locks on the System layer\n        //\n        #define UGSL_SYS &ug_sl RGB_BLACK RGB_ORANGE // ScrollLock COLOR_OFF COLOR_ON\n        #define UGNL_SYS &ug_nl RGB_BLACK RGB_ORANGE // NumLock    COLOR_OFF COLOR_ON\n        #define UGCL_SYS &ug_cl RGB_BLACK RGB_ORANGE // CapsLock   COLOR_OFF COLOR_ON\n        \n        Base {\n            bindings = <\n              TURQUOIS TURQUOIS TURQUOIS TURQUOIS TURQUOIS                                                                          TURQUOIS TURQUOIS TURQUOIS TURQUOIS TURQUOIS\n              CORAL    CORAL    CORAL    CORAL    CORAL    CORAL                                                           CORAL    CORAL    CORAL    CORAL    CORAL    CORAL   \n              WHITE    LBASE    LBASE    LBASE    LBASE    LBASE                                                           LBASE    LBASE    LBASE    LBASE    LBASE    LBASE   \n              RED      BASE     BASE     BASE     BASE     LBASE                                                           LBASE    BASE     BASE     BASE     BASE     LBASE   \n              LBASE    LBASE    LBASE    LBASE    LBASE    LBASE    YELLOW   MAGENTA  GREEN     GREEN    MAGENTA  YELLOW   LBASE    LBASE    LBASE    LBASE    LBASE    NAVIGATE\n              LILAC    NAVIGATE NAVIGATE ARROW    ARROW             RED      RED      CYAN      CYAN     WHITE    WHITE             ARROW    ARROW    LBASE    LBASE    NAVIGATE\n            >;\n            layer-id = <0>;\n        };\n\n        Lower {\n            bindings = <\n              SET_LESS SET_MORE SET_PREV SET_NEXT SET_TOGL                                                                          SET_NONE SET_LESS SET_MORE ________ LBASE   \n              ________ WHITE    LBASE    LBASE    RED      ________                                                        LBASE    UGNL_BAS LBASE    LBASE    LBASE    LBASE   \n              ________ WHITE    LBASE    LBASE    RED      CHARTRSE                                                        LBASE    CHARTRSE CHARTRSE CHARTRSE LBASE    UGSL_BAS\n              ________ ARROW    ARROW    ARROW    ARROW    CHARTRSE                                                        LBASE    CHARTRSE CHARTRSE CHARTRSE LBASE    UGCL_BAS\n              ________ LBASE    LBASE    LBASE    LBASE    CHARTRSE ________ ________ ________  ________ ________ ________ LBASE    CHARTRSE CHARTRSE CHARTRSE WHITE    ________\n              LILAC    LBASE    LBASE    LBASE    LBASE             ________ DULL_GRN ________  ________ ________ ________          CHARTRSE LBASE    LBASE    WHITE    ________\n            >;\n            layer-id = <LAYER_Lower>;\n        };\n\n        Symbol {\n            bindings = <\n              ________ ________ ________ ________ ________                                                                          ________ ________ ________ ________ ________\n              ________ CHARTRSE CHARTRSE CHARTRSE CHARTRSE CHARTRSE                                                        ________ YELLOW   MAGENTA  CYAN     GREEN    ________\n              CHARTRSE CHARTRSE CHARTRSE CHARTRSE CHARTRSE CHARTRSE                                                        CHARTRSE RED      RED      WHITE    WHITE    ________\n              CHARTRSE SPRINGRN SPRINGRN SPRINGRN SPRINGRN CHARTRSE                                                        CHARTRSE ARROW    ARROW    ARROW    ARROW    ________\n              CHARTRSE CHARTRSE CHARTRSE CHARTRSE CHARTRSE CHARTRSE ________ ________ ________  ________ ________ ________ CHARTRSE ________ ________ ________ ________ ________\n              CHARTRSE CHARTRSE CHARTRSE CHARTRSE CHARTRSE          ________ ________ ________  ________ DULL_GRN ________          ________ ________ ________ ________ ________\n            >;\n            layer-id = <LAYER_Symbol>;\n        };\n\n        Gaming {\n            bindings = <\n              CORAL    CORAL    CORAL    CORAL    CORAL                                                                             TURQUOIS TURQUOIS TURQUOIS TURQUOIS TURQUOIS\n              CORAL    CORAL    CORAL    CORAL    CORAL    CORAL                                                           CORAL    CORAL    CORAL    CORAL    CORAL    CORAL   \n              WHITE    LBASE    LBASE    GREEN    LBASE    LBASE                                                           LBASE    LBASE    LBASE    LBASE    LBASE    LBASE   \n              RED      BASE     GREEN    GREEN    GREEN    LBASE                                                           LBASE    BASE     BASE     BASE     BASE     LBASE   \n              LBASE    LBASE    LBASE    LBASE    LBASE    LBASE    YELLOW   MAGENTA  CYAN      GREEN    MAGENTA  YELLOW   LBASE    LBASE    LBASE    LBASE    LBASE    NAVIGATE\n              LILAC    NAVIGATE NAVIGATE ARROW    ARROW             GREEN    WHITE    WHITE     CYAN     WHITE    WHITE             ARROW    ARROW    LBASE    LBASE    NAVIGATE\n            >;\n            layer-id = <LAYER_Gaming>;\n        };\n\n        GamingReverse {\n            bindings = <\n              TURQUOIS TURQUOIS TURQUOIS TURQUOIS TURQUOIS                                                                          TURQUOIS TURQUOIS TURQUOIS TURQUOIS TURQUOIS\n              ________ CORAL    CORAL    CORAL    CORAL    CORAL                                                           CORAL    CORAL    CORAL    CORAL    CORAL    CORAL   \n              ________ LBASE    LBASE    LBASE    LBASE    LBASE                                                           LBASE    LBASE    LBASE    LBASE    LBASE    LBASE   \n              ________ BASE     BASE     BASE     BASE     LBASE                                                           LBASE    BASE     BASE     BASE     BASE     LBASE   \n              ________ LBASE    LBASE    LBASE    LBASE    LBASE    ________ ________ ________  GREEN    MAGENTA  YELLOW   LBASE    LBASE    LBASE    LBASE    LBASE    NAVIGATE\n              ________ NAVIGATE NAVIGATE DULL_GRN DULL_GRN          ________ ________ ________  CYAN     WHITE    WHITE             ARROW    ARROW    LBASE    LBASE    NAVIGATE\n            >;\n            layer-id = <LAYER_GamingReverse>;\n        };\n\n        GamingLower {\n            bindings = <\n              SET_LESS SET_MORE SET_PREV SET_NEXT SET_TOGL                                                                          SET_NONE SET_LESS SET_MORE ________ LBASE   \n              ________ WHITE    LBASE    LBASE    RED      ________                                                        LBASE    UGNL_BAS LBASE    LBASE    LBASE    LBASE   \n              ________ WHITE    LBASE    LBASE    RED      CHARTRSE                                                        LBASE    CHARTRSE CHARTRSE CHARTRSE LBASE    UGSL_BAS\n              ________ ARROW    ARROW    ARROW    ARROW    CHARTRSE                                                        LBASE    CHARTRSE CHARTRSE CHARTRSE LBASE    UGCL_BAS\n              ________ LBASE    LBASE    LBASE    LBASE    CHARTRSE ________ ________ ________  ________ ________ ________ LBASE    CHARTRSE CHARTRSE CHARTRSE WHITE    ________\n              LILAC    LBASE    LBASE    LBASE    LBASE             ________ DULL_GRN ________  ________ ________ ________          CHARTRSE LBASE    LBASE    WHITE    ________\n            >;\n            layer-id = <LAYER_GamingLower>;\n        };\n    };\n};",
  "config_parameters": [
    {
      "paramName": "EXPERIMENTAL_RGB_LAYER",
      "value": "y"
    },
    {
      "paramName": "EXPERIMENTAL_RGB_UNDERGLOW_AUTO_OFF_IDLE",
      "value": "y"
    }
  ],
  "layout_parameters": {},
  "layer_names": [
    "Base",
    "Lower",
    "Magic",
    "Cursor_macos",
    "Mouse_macos",
    "Symbol",
    "Gaming",
    "GamingLower",
    "GamingReverse"
  ],
  "layers": [
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LA",
            "params": [
              {
                "value": "LEFT",
                "params": []
              }
            ]
          },
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LA",
            "params": [
              {
                "value": "RIGHT",
                "params": []
              }
            ]
          },
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LA",
            "params": [
              {
                "value": "BSPC",
                "params": []
              }
            ]
          },
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 1,
            "params": []
          },
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 5,
            "params": []
          },
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LA",
            "params": [
              {
                "value": "UP",
                "params": []
              }
            ]
          },
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LA",
            "params": [
              {
                "value": "DOWN",
                "params": []
              }
            ]
          },
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LBKT",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "RBKT",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRINTSCREEN",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LG",
                "params": [
                  {
                    "value": "Z",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SCROLLLOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "LBKT",
                    "params": []
                  }
                ]
              }
            ]
          },
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "MINUS",
                    "params": []
                  }
                ]
              }
            ]
          },
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "MINUS",
                "params": []
              }
            ]
          },
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "RBKT",
                    "params": []
                  }
                ]
              }
            ]
          },
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PERCENT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": 0,
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt",
        "params": [
          {
            "value": "BT_CLR_ALL",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRI",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_TOG",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SPD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_SAD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_HUD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_BRD",
            "params": []
          }
        ]
      },
      {
        "value": "&rgb_ug",
        "params": [
          {
            "value": "RGB_EFF",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bootloader",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_2",
        "params": []
      },
      {
        "value": "&bt_3",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&reset",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&bt_0",
        "params": []
      },
      {
        "value": "&bt_1",
        "params": []
      },
      {
        "value": "&out",
        "params": [
          {
            "value": "OUT_USB",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      }
    ],
    [
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "TAB",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "INS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "Z",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "Z",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&cur_SELECT_LINE_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&cur_SELECT_WORD_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&cur_SELECT_NONE_v1_TKZ",
        "params": []
      },
      {
        "value": "&cur_EXTEND_LINE_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&cur_EXTEND_WORD_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "L",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "K",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&cur_EXTEND_LINE_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&cur_EXTEND_WORD_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&cur_SELECT_LINE_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&cur_SELECT_WORD_macos_v1_TKZ",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "H",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "K",
                "params": []
              }
            ]
          }
        ]
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "LCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "RCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K_APP",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mmv",
        "params": [
          {
            "value": "MOVE_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "LCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "RCLK",
            "params": []
          }
        ]
      },
      {
        "value": "&mkp",
        "params": [
          {
            "value": "MB4",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&msc",
        "params": [
          {
            "value": "SCRL_RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RPAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&sk",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EXCL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBRC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "QMARK",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CARET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UNDER",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DLLR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "STAR",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "RA",
            "params": [
              {
                "value": "LEFT",
                "params": []
              }
            ]
          },
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "RA",
            "params": [
              {
                "value": "UP",
                "params": []
              }
            ]
          },
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "RA",
            "params": [
              {
                "value": "DOWN",
                "params": []
              }
            ]
          },
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "RA",
            "params": [
              {
                "value": "RIGHT",
                "params": []
              }
            ]
          },
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TILDE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PIPE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "AMPS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F10",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "TAB",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Q",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "W",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "E",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "R",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "T",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "ESC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "A",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "S",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "D",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "G",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SQT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "GRAVE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Z",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "X",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "V",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "B",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RCTRL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RGUI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RSHFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "HOME",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "END",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 7,
            "params": []
          },
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LALT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RALT",
            "params": []
          }
        ]
      },
      {
        "value": "&lt",
        "params": [
          {
            "value": 5,
            "params": []
          },
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RBKT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PG_DN",
            "params": []
          }
        ]
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_BRI_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PREV",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_NEXT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_PP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_MUTE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_DN",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "C_VOL_UP",
            "params": []
          }
        ]
      },
      {
        "value": "&none",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PAUSE_BREAK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RET",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LBKT",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "RBKT",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DEL",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LEFT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_NUM",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_EQUAL",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_SLASH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MULTIPLY",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PRINTSCREEN",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SPACE",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LS",
            "params": [
              {
                "value": "LG",
                "params": [
                  {
                    "value": "Z",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "Z",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "BSPC",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "X",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "RIGHT_PARENTHESIS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_MINUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SCROLLLOCK",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "LBKT",
                    "params": []
                  }
                ]
              }
            ]
          },
          {
            "value": "LEFT",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "MINUS",
                    "params": []
                  }
                ]
              }
            ]
          },
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "MINUS",
                "params": []
              }
            ]
          },
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&mt",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "RBKT",
                    "params": []
                  }
                ]
              }
            ]
          },
          {
            "value": "RIGHT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "C",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "PERCENT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N5",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_PLUS",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "CAPS",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "A",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&select_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "F",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "V",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&to",
        "params": [
          {
            "value": "6",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&magic",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "LS",
                "params": [
                  {
                    "value": "G",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_line",
            "params": []
          }
        ]
      },
      {
        "value": "Custom",
        "params": [
          {
            "value": "&extend_word",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "LG",
            "params": [
              {
                "value": "G",
                "params": []
              }
            ]
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_N0",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "KP_ENTER",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      }
    ],
    [
      {
        "value": "&kp",
        "params": [
          {
            "value": "F1",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F2",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F3",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F4",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "F5",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N6",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N7",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N8",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N9",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N0",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "P",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "O",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "I",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "U",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "Y",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "SEMI",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "L",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "K",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "J",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "H",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "FSLH",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOT",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "COMMA",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "M",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "N",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "UP",
            "params": []
          }
        ]
      },
      {
        "value": "&kp",
        "params": [
          {
            "value": "DOWN",
            "params": []
          }
        ]
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      },
      {
        "value": "&trans",
        "params": []
      }
    ]
  ],
  "macros": [
    {
      "name": "&cur_EXTEND_LINE_macos_v1_TKZ",
      "description": "Cursor Layer - Extent Line (seq) - TailorKey",
      "waitMs": 1,
      "tapMs": 1,
      "bindings": [
        {
          "value": "&kp",
          "params": [
            {
              "value": "LG",
              "params": [
                {
                  "value": "LS",
                  "params": [
                    {
                      "value": "RIGHT",
                      "params": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "params": []
    },
    {
      "name": "&cur_EXTEND_WORD_macos_v1_TKZ",
      "description": "Cursor Layer - Extend Word (seq) - TailorKey",
      "waitMs": 1,
      "tapMs": 1,
      "bindings": [
        {
          "value": "&kp",
          "params": [
            {
              "value": "LA",
              "params": [
                {
                  "value": "LS",
                  "params": [
                    {
                      "value": "RIGHT",
                      "params": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "params": []
    },
    {
      "name": "&cur_SELECT_LINE_macos_v1_TKZ",
      "description": "Cursor Layer macos - Select Line (seq) - TailorKey",
      "waitMs": 1,
      "tapMs": 1,
      "bindings": [
        {
          "value": "&kp",
          "params": [
            {
              "value": "LG",
              "params": [
                {
                  "value": "LEFT",
                  "params": []
                }
              ]
            }
          ]
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "LG",
              "params": [
                {
                  "value": "LS",
                  "params": [
                    {
                      "value": "RIGHT",
                      "params": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "params": []
    },
    {
      "name": "&cur_SELECT_NONE_v1_TKZ",
      "description": "Cursor Layer - Select None (seq) - TailorKey",
      "waitMs": 1,
      "tapMs": 1,
      "bindings": [
        {
          "value": "&kp",
          "params": [
            {
              "value": "DOWN",
              "params": []
            }
          ]
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "UP",
              "params": []
            }
          ]
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "RIGHT",
              "params": []
            }
          ]
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "LEFT",
              "params": []
            }
          ]
        }
      ],
      "params": []
    },
    {
      "name": "&cur_SELECT_WORD_macos_v1_TKZ",
      "description": "Cursor Layer - Select Word (seq) - TailorKey",
      "waitMs": 1,
      "tapMs": 1,
      "bindings": [
        {
          "value": "&kp",
          "params": [
            {
              "value": "LA",
              "params": [
                {
                  "value": "LEFT",
                  "params": []
                }
              ]
            }
          ]
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "LA",
              "params": [
                {
                  "value": "LS",
                  "params": [
                    {
                      "value": "RIGHT",
                      "params": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "params": []
    },
    {
      "name": "&mod_tab_v2_TKZ",
      "description": "mod_tab_switcher - TailorKey\n\n",
      "waitMs": 0,
      "tapMs": 0,
      "bindings": [
        {
          "value": "&macro_press",
          "params": []
        },
        {
          "value": "&macro_param_1to1",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "MACRO_PLACEHOLDER",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_tap",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "TAB",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_pause_for_release",
          "params": []
        },
        {
          "value": "&macro_release",
          "params": []
        },
        {
          "value": "&macro_param_1to1",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "MACRO_PLACEHOLDER",
              "params": []
            }
          ]
        }
      ],
      "params": ["code"]
    },
    {
      "name": "&factorio_quickbar_tap",
      "description": "",
      "bindings": [
        {
          "value": "&macro_press",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "LSHFT",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_tap",
          "params": []
        },
        {
          "value": "&macro_param_1to1",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "MACRO_PLACEHOLDER",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_release",
          "params": []
        },
        {
          "value": "&macro_tap",
          "params": []
        },
        {
          "value": "&macro_param_2to1",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "MACRO_PLACEHOLDER",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_press",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "LSHFT",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_tap",
          "params": []
        },
        {
          "value": "&kp",
          "params": [
            {
              "value": "N1",
              "params": []
            }
          ]
        },
        {
          "value": "&macro_release",
          "params": []
        }
      ],
      "params": ["code", "code"]
    }
  ],
  "inputListeners": [],
  "holdTaps": [],
  "combos": [
    {
      "name": "capsword_combo",
      "description": "",
      "binding": {
        "value": "&caps_word",
        "params": []
      },
      "keyPositions": [52, 57],
      "layers": [-1]
    },
    {
      "name": "sticky_hyper_combo_left",
      "description": "",
      "binding": {
        "value": "&sk",
        "params": [
          {
            "value": "LA",
            "params": [
              {
                "value": "LC",
                "params": [
                  {
                    "value": "LG",
                    "params": [
                      {
                        "value": "LSHFT",
                        "params": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "keyPositions": [69, 52],
      "layers": [-1]
    },
    {
      "name": "sticky_hyper_combo_right",
      "description": "",
      "binding": {
        "value": "&sk",
        "params": [
          {
            "value": "RG",
            "params": [
              {
                "value": "RA",
                "params": [
                  {
                    "value": "RC",
                    "params": [
                      {
                        "value": "RSHFT",
                        "params": []
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "keyPositions": [57, 74],
      "layers": [-1]
    },
    {
      "name": "sticky_meh_combo_left",
      "description": "",
      "binding": {
        "value": "&sk",
        "params": [
          {
            "value": "LC",
            "params": [
              {
                "value": "LA",
                "params": [
                  {
                    "value": "LSHFT",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "keyPositions": [69, 70],
      "layers": [-1]
    },
    {
      "name": "sticky_meh_combo_right",
      "description": "",
      "binding": {
        "value": "&sk",
        "params": [
          {
            "value": "RC",
            "params": [
              {
                "value": "RA",
                "params": [
                  {
                    "value": "RSHFT",
                    "params": []
                  }
                ]
              }
            ]
          }
        ]
      },
      "keyPositions": [73, 74],
      "layers": [-1]
    },
    {
      "name": "layer_lower_lock",
      "description": "",
      "binding": {
        "value": "&tog",
        "params": [
          {
            "value": 1,
            "params": []
          }
        ]
      },
      "keyPositions": [53, 70],
      "layers": [0, 1]
    },
    {
      "name": "layer_symbol_lock",
      "description": "",
      "binding": {
        "value": "&tog",
        "params": [
          {
            "value": 5,
            "params": []
          }
        ]
      },
      "keyPositions": [73, 56],
      "layers": [0, 5]
    },
    {
      "name": "layer_gaming_lock",
      "description": "",
      "binding": {
        "value": "&tog",
        "params": [
          {
            "value": 6,
            "params": []
          }
        ]
      },
      "keyPositions": [71, 54],
      "layers": [0, 6, 8]
    },
    {
      "name": "sticky_gaming_lock_reverse",
      "description": "",
      "binding": {
        "value": "&sl",
        "params": [
          {
            "value": 8,
            "params": []
          }
        ]
      },
      "keyPositions": [68, 67],
      "slowRelease": true,
      "layers": [6]
    }
  ]
}
